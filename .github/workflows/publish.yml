name: Publish

permissions:
  contents: write

on:
  push:
    branches: [ "main" ]
    tags: '[0-9]+\.[0-9]+\.[0-9]+'
  pull_request:
    branches: [ "main" ]

jobs:
  compile:
    name: Compile Backends
    strategy:
      matrix:
        include:
          - runs-on: ubuntu-latest
            binary-name: linux_amd64
          - runs-on: macos-latest
            binary-name: macos_amd64
          - runs-on: windows-latest
            binary-name: windows.exe
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: flutter-actions/setup-flutter@v3
        with:
          channel: stable
          version: latest

      - name: Setup melos
        uses: bluefireteam/melos-action@v3

      - name: Create Build Folder
        run: mkdir -p build/${{ matrix.runs-on }}

      - name: Build Cloud Backend
        run: dart compile exe ./backends/smart_dash_cloud/bin/main.dart -o build/${{ matrix.runs-on }}/cloud_${{ matrix.binary-name }}

      - uses: actions/upload-artifact@v3
        with:
          name: bin-${{ matrix.runs-on }}
          path: build/${{ matrix.runs-on }}


  compile-rpi:
    name: Compile Backends for RPI
    strategy:
      matrix:
        arch: [armv6l, armv7l, aarch64]
        include:
          - arch: armv6l
            runs-on: ubuntu-latest
            base_image: raspios_lite:latest
          - arch: armv7l
            runs-on: ubuntu-latest
            base_image: raspios_lite:latest
          - arch: aarch64
            runs-on: ubuntu-latest
            base_image: raspios_lite_arm64:latest
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3

      - name: Prepare Build
        run: |
          mkdir -p build/sdk
          mkdir -p build/${{ matrix.runs-on }}
          cd build/sdk
          wget --no-verbose https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.24.5-stable.tar.xz
          tar xf flutter_linux_3.24.5-stable.tar.xz
          export PATH="$PATH:`pwd`/flutter/bin"
          flutter doctor

      - name: Build Cloud Backend
        uses: pguyot/arm-runner-action@v2
        with:
          base_image: ${{ matrix.base_image }}
          #            sudo apt-get update -y --allow-releaseinfo-change
          #            sudo apt-get --yes --no-install-recommends install snapd
          #            sudo systemctl restart snapd
          #            sudo snap install snapd
          #            sudo snap install flutter --classic
          #            dart pub global activate melos
          #            melos bootstrap
          #            mkdir -p build/${{ matrix.runs-on }}
          bind_mount_repository: true
          commands: |
            sudo apt-get update -y
            sudo apt-get install -y git-all
            ls -al build/sdk
            export PATH="$PATH:`pwd`/build/sdk/flutter/bin"
            flutter doctor
            dart pub global activate melos
            melos bootstrap
            dart compile exe ./backends/smart_dash_cloud/bin/main.dart -o build/${{ matrix.runs-on }}/cloud_${{ matrix.binary-name }}_${{ matrix.arch }}

      - uses: actions/upload-artifact@v3
        with:
          name: bin-${{ matrix.runs-on }}
          path: build/${{ matrix.runs-on }}


  release:
    needs:
      - compile
      - compile-rpi
    name: Github Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: bin-ubuntu-latest
          path: bin-linux
      - uses: actions/download-artifact@v3
        with:
          name: bin-macos-latest
          path: bin-macos
      - uses: actions/download-artifact@v3
        with:
          name: bin-windows-latest
          path: bin-windows
      - uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: bin-*/*
      - name: Post release details
        if: success()
        run: echo "Release draft created successfully."
