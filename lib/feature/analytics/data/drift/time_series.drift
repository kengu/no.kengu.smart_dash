import 'time_series_database.dart';

CREATE TABLE TimeSeriesTable (
    name TEXT NOT NULL,
    ts DATETIME NOT NULL,
    span INT NOT NULL,
    PRIMARY KEY (name, ts)
) WITHOUT ROWID;


CREATE TABLE DataVectorTable (
    id INT NOT NULL PRIMARY KEY AUTOINCREMENT,
    idx INT NOT NULL,
    name TEXT NOT NULL,
    ts DATETIME NOT NULL,
    data TEXT NOT NULL,
    type ENUMNAME(DataVectorType) NOT NULL,
    UNIQUE (name, ts, idx),
    FOREIGN KEY(name, ts) REFERENCES TimeSeriesTable(name, ts)
);

CREATE TABLE DataCoordsTable (
    id INT NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    ts DATETIME NOT NULL,
    data TEXT NOT NULL,
    UNIQUE (name, ts),
    FOREIGN KEY(name, ts) REFERENCES TimeSeriesTable(name, ts)
);

CREATE TABLE DataDimsTable (
    id INT NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    ts DATETIME NOT NULL,
    data TEXT NOT NULL,
    UNIQUE (name, ts),
    FOREIGN KEY(name, ts) REFERENCES TimeSeriesTable(name, ts)
);

-- Queries
/*
   After declaring your tables, you can put queries in here.
   Just write the name of the query, a colon (:) and the SQL qu
 */

-- Get time series with exact name match
getFromExactName(:name AS TEXT, :ts AS DATETIME): SELECT * FROM TimeSeriesTable WHERE name = :name and ts = :ts;

-- Get all data vectors referencing given TimeSeries id
getVectorsFromName(:name AS TEXT, :ts AS DATETIME): SELECT * FROM DataVectorTable WHERE name = :name and ts = :ts;

-- Get data coordinates referencing given TimeSeries id
getCoordsFromName(:name AS TEXT, :ts AS DATETIME): SELECT * FROM DataCoordsTable WHERE name = :name and ts = :ts;

-- Get data dimensions referencing given TimeSeries id
getDimsFromName(:name AS TEXT, :ts AS DATETIME): SELECT * FROM DataDimsTable WHERE name = :name and ts = :ts;

-- Insert time series with given name
insertTimeSeries(:name,:ts,:span): INSERT INTO TimeSeriesTable(name, ts, span) VALUES(:name, :ts, :span);

