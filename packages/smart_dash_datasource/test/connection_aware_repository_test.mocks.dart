// Mocks generated by Mockito 5.4.4 from annotations
// in smart_dash_datasource/test/connection_aware_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;

import 'package:dio/dio.dart' as _i10;
import 'package:dio/src/adapter.dart' as _i3;
import 'package:dio/src/cancel_token.dart' as _i12;
import 'package:dio/src/dio_mixin.dart' as _i5;
import 'package:dio/src/options.dart' as _i2;
import 'package:dio/src/response.dart' as _i6;
import 'package:dio/src/transformer.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;
import 'package:optional/optional.dart' as _i8;
import 'package:riverpod/riverpod.dart' as _i7;
import 'package:smart_dash_datasource/smart_dash_datasource.dart' as _i9;

import 'connection_aware_repository_test.dart' as _i13;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBaseOptions_0 extends _i1.SmartFake implements _i2.BaseOptions {
  _FakeBaseOptions_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_1 extends _i1.SmartFake
    implements _i3.HttpClientAdapter {
  _FakeHttpClientAdapter_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_2 extends _i1.SmartFake implements _i4.Transformer {
  _FakeTransformer_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_3 extends _i1.SmartFake implements _i5.Interceptors {
  _FakeInterceptors_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_4<T1> extends _i1.SmartFake implements _i6.Response<T1> {
  _FakeResponse_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRef_5<State extends Object?> extends _i1.SmartFake
    implements _i7.Ref<State> {
  _FakeRef_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOptional_6<T> extends _i1.SmartFake implements _i8.Optional<T> {
  _FakeOptional_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRepositoryClient_7<I, T> extends _i1.SmartFake
    implements _i9.RepositoryClient<I, T> {
  _FakeRepositoryClient_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i10.Dio {
  MockDio() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_0(
          this,
          Invocation.getter(#options),
        ),
      ) as _i2.BaseOptions);

  @override
  set options(_i2.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_1(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i3.HttpClientAdapter);

  @override
  set httpClientAdapter(_i3.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_2(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i4.Transformer);

  @override
  set transformer(_i4.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_3(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i5.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i11.Future<_i6.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i2.Options? options,
    _i12.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i12.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i11.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<dynamic>>);

  @override
  _i11.Future<_i6.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i2.ProgressCallback? onReceiveProgress,
    _i12.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    Object? data,
    _i2.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i11.Future<_i6.Response<dynamic>>.value(_FakeResponse_4<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<dynamic>>);

  @override
  _i11.Future<_i6.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i12.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i12.CancelToken? cancelToken,
    _i2.Options? options,
    _i2.ProgressCallback? onSendProgress,
    _i2.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);

  @override
  _i11.Future<_i6.Response<T>> fetch<T>(_i2.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i11.Future<_i6.Response<T>>.value(_FakeResponse_4<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i11.Future<_i6.Response<T>>);
}

/// A class which mocks [FooRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFooRepository extends _i1.Mock implements _i13.FooRepository {
  MockFooRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Ref<Object?> get ref => (super.noSuchMethod(
        Invocation.getter(#ref),
        returnValue: _FakeRef_5<Object?>(
          this,
          Invocation.getter(#ref),
        ),
      ) as _i7.Ref<Object?>);

  @override
  _i11.Stream<_i9.RepositoryEvent<int, _i13.Foo>> get events =>
      (super.noSuchMethod(
        Invocation.getter(#events),
        returnValue: _i11.Stream<_i9.RepositoryEvent<int, _i13.Foo>>.empty(),
      ) as _i11.Stream<_i9.RepositoryEvent<int, _i13.Foo>>);

  @override
  int toId(_i13.Foo? item) => (super.noSuchMethod(
        Invocation.method(
          #toId,
          [item],
        ),
        returnValue: 0,
      ) as int);

  @override
  String toKey(int? id) => (super.noSuchMethod(
        Invocation.method(
          #toKey,
          [id],
        ),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.method(
            #toKey,
            [id],
          ),
        ),
      ) as String);

  @override
  _i11.Future<List<_i13.Foo>> seed() => (super.noSuchMethod(
        Invocation.method(
          #seed,
          [],
        ),
        returnValue: _i11.Future<List<_i13.Foo>>.value(<_i13.Foo>[]),
      ) as _i11.Future<List<_i13.Foo>>);

  @override
  _i11.Future<bool> exists(int? id) => (super.noSuchMethod(
        Invocation.method(
          #exists,
          [id],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<_i8.Optional<_i13.Foo>> get(int? id) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [id],
        ),
        returnValue:
            _i11.Future<_i8.Optional<_i13.Foo>>.value(_FakeOptional_6<_i13.Foo>(
          this,
          Invocation.method(
            #get,
            [id],
          ),
        )),
      ) as _i11.Future<_i8.Optional<_i13.Foo>>);

  @override
  _i11.Future<List<_i13.Foo>> getAll([List<int>? ids = const []]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [ids],
        ),
        returnValue: _i11.Future<List<_i13.Foo>>.value(<_i13.Foo>[]),
      ) as _i11.Future<List<_i13.Foo>>);

  @override
  _i11.Future<List<_i13.Foo>> where(bool Function(_i13.Foo)? test) =>
      (super.noSuchMethod(
        Invocation.method(
          #where,
          [test],
        ),
        returnValue: _i11.Future<List<_i13.Foo>>.value(<_i13.Foo>[]),
      ) as _i11.Future<List<_i13.Foo>>);

  @override
  _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>> add(_i13.Foo? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #add,
          [item],
        ),
        returnValue:
            _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>>.value(
                _i14.dummyValue<_i9.SingleRepositoryResult<int, _i13.Foo>>(
          this,
          Invocation.method(
            #add,
            [item],
          ),
        )),
      ) as _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>>);

  @override
  _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>> upsert(
          _i13.Foo? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #upsert,
          [item],
        ),
        returnValue:
            _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>>.value(
                _i14.dummyValue<_i9.SingleRepositoryResult<int, _i13.Foo>>(
          this,
          Invocation.method(
            #upsert,
            [item],
          ),
        )),
      ) as _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>>);

  @override
  _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>> update(
          _i13.Foo? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [item],
        ),
        returnValue:
            _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>>.value(
                _i14.dummyValue<_i9.SingleRepositoryResult<int, _i13.Foo>>(
          this,
          Invocation.method(
            #update,
            [item],
          ),
        )),
      ) as _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>>);

  @override
  _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>> remove(
          _i13.Foo? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #remove,
          [item],
        ),
        returnValue:
            _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>>.value(
                _i14.dummyValue<_i9.SingleRepositoryResult<int, _i13.Foo>>(
          this,
          Invocation.method(
            #remove,
            [item],
          ),
        )),
      ) as _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>>);

  @override
  R raise<R extends _i9.RepositoryResult<int, _i13.Foo>>(R? result) =>
      (super.noSuchMethod(
        Invocation.method(
          #raise,
          [result],
        ),
        returnValue: _i14.dummyValue<R>(
          this,
          Invocation.method(
            #raise,
            [result],
          ),
        ),
      ) as R);
}

/// A class which mocks [FooRemoteRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFooRemoteRepository extends _i1.Mock
    implements _i13.FooRemoteRepository {
  MockFooRemoteRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.RepositoryClient<int, _i13.Foo> get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeRepositoryClient_7<int, _i13.Foo>(
          this,
          Invocation.getter(#client),
        ),
      ) as _i9.RepositoryClient<int, _i13.Foo>);

  @override
  _i7.Ref<Object?> get ref => (super.noSuchMethod(
        Invocation.getter(#ref),
        returnValue: _FakeRef_5<Object?>(
          this,
          Invocation.getter(#ref),
        ),
      ) as _i7.Ref<Object?>);

  @override
  _i11.Stream<_i9.RepositoryEvent<int, _i13.Foo>> get events =>
      (super.noSuchMethod(
        Invocation.getter(#events),
        returnValue: _i11.Stream<_i9.RepositoryEvent<int, _i13.Foo>>.empty(),
      ) as _i11.Stream<_i9.RepositoryEvent<int, _i13.Foo>>);

  @override
  _i11.Future<bool> exists(int? id) => (super.noSuchMethod(
        Invocation.method(
          #exists,
          [id],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);

  @override
  _i11.Future<_i8.Optional<_i13.Foo>> get(int? id) => (super.noSuchMethod(
        Invocation.method(
          #get,
          [id],
        ),
        returnValue:
            _i11.Future<_i8.Optional<_i13.Foo>>.value(_FakeOptional_6<_i13.Foo>(
          this,
          Invocation.method(
            #get,
            [id],
          ),
        )),
      ) as _i11.Future<_i8.Optional<_i13.Foo>>);

  @override
  _i11.Future<List<_i13.Foo>> getAll([List<int>? ids = const []]) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [ids],
        ),
        returnValue: _i11.Future<List<_i13.Foo>>.value(<_i13.Foo>[]),
      ) as _i11.Future<List<_i13.Foo>>);

  @override
  _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>> upsert(
          _i13.Foo? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #upsert,
          [item],
        ),
        returnValue:
            _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>>.value(
                _i14.dummyValue<_i9.SingleRepositoryResult<int, _i13.Foo>>(
          this,
          Invocation.method(
            #upsert,
            [item],
          ),
        )),
      ) as _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>>);

  @override
  _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>> remove(
          _i13.Foo? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #remove,
          [item],
        ),
        returnValue:
            _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>>.value(
                _i14.dummyValue<_i9.SingleRepositoryResult<int, _i13.Foo>>(
          this,
          Invocation.method(
            #remove,
            [item],
          ),
        )),
      ) as _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>>);

  @override
  int toId(_i13.Foo? item) => (super.noSuchMethod(
        Invocation.method(
          #toId,
          [item],
        ),
        returnValue: 0,
      ) as int);

  @override
  String toKey(int? id) => (super.noSuchMethod(
        Invocation.method(
          #toKey,
          [id],
        ),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.method(
            #toKey,
            [id],
          ),
        ),
      ) as String);

  @override
  _i11.Future<List<_i13.Foo>> seed() => (super.noSuchMethod(
        Invocation.method(
          #seed,
          [],
        ),
        returnValue: _i11.Future<List<_i13.Foo>>.value(<_i13.Foo>[]),
      ) as _i11.Future<List<_i13.Foo>>);

  @override
  _i11.Future<List<_i13.Foo>> where(bool Function(_i13.Foo)? test) =>
      (super.noSuchMethod(
        Invocation.method(
          #where,
          [test],
        ),
        returnValue: _i11.Future<List<_i13.Foo>>.value(<_i13.Foo>[]),
      ) as _i11.Future<List<_i13.Foo>>);

  @override
  _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>> add(_i13.Foo? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #add,
          [item],
        ),
        returnValue:
            _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>>.value(
                _i14.dummyValue<_i9.SingleRepositoryResult<int, _i13.Foo>>(
          this,
          Invocation.method(
            #add,
            [item],
          ),
        )),
      ) as _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>>);

  @override
  _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>> update(
          _i13.Foo? item) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [item],
        ),
        returnValue:
            _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>>.value(
                _i14.dummyValue<_i9.SingleRepositoryResult<int, _i13.Foo>>(
          this,
          Invocation.method(
            #update,
            [item],
          ),
        )),
      ) as _i11.Future<_i9.SingleRepositoryResult<int, _i13.Foo>>);

  @override
  R raise<R extends _i9.RepositoryResult<int, _i13.Foo>>(R? result) =>
      (super.noSuchMethod(
        Invocation.method(
          #raise,
          [result],
        ),
        returnValue: _i14.dummyValue<R>(
          this,
          Invocation.method(
            #raise,
            [result],
          ),
        ),
      ) as R);
}
